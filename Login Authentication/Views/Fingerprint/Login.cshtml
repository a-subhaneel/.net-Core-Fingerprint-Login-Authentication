@model net_core_fingerprint_authorization.Models.FingerprintModel


@{
    ViewData["Title"] = "Login";
}
@if (TempData["Success"] != null)
{
    <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
}
<h2>Login</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="EmailID" class="control-label"></label>
                <input asp-for="EmailID" class="form-control" required/>
                @*<span asp-validation-for="EmailID" class="text-danger"></span>*@
            </div>
            @if (ViewBag.UserPrintSuccess == null)
            {
                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" required/>
                    @*<span asp-validation-for="Password" class="text-danger"></span>*@
                </div>
            }
            @if (ViewBag.UserPrintSuccess != null)
            {
                <div class="form-group">
                    <label class="control-label"></label>
                    <text>
                        <text style="visibility:hidden">Match Score</text><input type='text' hidden id=quality size=10 value="100">
                        <text style="visibility:hidden">@ViewBag.UserPrintSuccess</text>
                        <img asp-for="FingerprintImage" name="FetchImage" style="float:left" id="FPImage1" alt="Fingerpint Image" height=200 width=140 src="~/images/fingerScan.png"> <br>

                        <br>
                </div>
                <br><br><br><br><br><br>
                <br>
                @*<img border="2" id="FPImage1" alt="Fingerpint Image" height=300 width=210 src="~/images/PlaceFinger.bmp">*@
                @*<img border="2" id="FPImage2" alt="Fingerpint Image" height=300 width=210 src=".\Images\PlaceFinger2.bmp">*@ <br>
                <input type="button" class="btn btn-outline-warning" id="ScannedButton" value="Click to Scan" onclick="CallSGIFPGetData(SuccessFunc1, ErrorFunc)">
                @*<input type="button" value="Click to Scan" onclick="CallSGIFPGetData(SuccessFunc2, ErrorFunc)">*@ <br><br>
                @if (ViewBag.UserPrintSuccess != null)
                {
                    <input type="submit" class="btn btn-outline-success" style="display:none" id="LoginButton" value="Login" onclick="matchScore(succMatch, failureFunc)"> <br><br>
                    @*<input type="reset" asp-action="Signout" asp-controller="Fingerprint" class="btn btn-outline-danger" style="" id="signout" value="Reset">*@<br><br>

                }
                <textarea class="form-control" id="demo1" name="TocompareFingerPrint" style="visibility:hidden" readonly></textarea>

                <button type="button" id="getKey" hidden="hidden" class="btn btn-outline-primary" onclick='document.getElementById("demo1").innerHTML = template_1'>Get Key</button>
                <button type="button" style="visibility:hidden" onclick='document.getElementById("demo1").innerHTML = template_1'>Get Key</button>

            }
            <br>
            @if (ViewBag.UserPrintSuccess == null)
            {
                <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-outline-success" style="margin-right:15px" />
                    <input type="button" value="Register" class="btn btn-outline-info" onclick="location.href='@Url.Action("RegisterUser","Fingerprint")'" />

                </div>
            }


            <br>
            <br>
        </form>
    </div>
</div>



<script type="text/javascript">

    function captureFP() {
        CallSGIFPGetData(SuccessFunc, ErrorFunc);
    }

    /*
        This functions is called if the service sucessfully returns some data in JSON object
     */
    function SuccessFunc(result) {
        if (result.ErrorCode == 0) {
            /* 	Display BMP data in image tag
                BMP data is in base 64 format
            */debugger;
            if (result != null && result.BMPBase64.length > 0) {
                document.getElementById("FPImage1").src = "data:image/bmp;base64," + result.BMPBase64;
            }
            var tbl = "<table border=1>";
            tbl += "<tr>";
            tbl += "<td> Serial Number of device </td>";
            tbl += "<td> <b>" + result.SerialNumber + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Image Height</td>";
            tbl += "<td> <b>" + result.ImageHeight + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Image Width</td>";
            tbl += "<td> <b>" + result.ImageWidth + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Image Resolution</td>";
            tbl += "<td> <b>" + result.ImageDPI + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Image Quality (1-100)</td>";
            tbl += "<td> <b>" + result.ImageQuality + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> NFIQ (1-5)</td>";
            tbl += "<td> <b>" + result.NFIQ + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Template(base64)</td>";
            tbl += "<td> <b> <textarea rows=8 cols=50>" + result.TemplateBase64 + "</textarea></b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> Image WSQ Size</td>";
            tbl += "<td> <b>" + result.WSQImageSize + "</b> </td>";
            tbl += "</tr>";
            tbl += "<tr>";
            tbl += "<td> EncodeWSQ(base64)</td>";
            tbl += "<td> <b> <textarea rows=8 cols=50>" + result.WSQImage + "</textarea></b> </td>";
            tbl += "</tr>";
            tbl += "</table>";
            document.getElementById('result').innerHTML = tbl;
        }
        else {
            alert("Fingerprint Capture Error Code:  " + result.ErrorCode + ".\nDescription:  " + ErrorCodeToString(result.ErrorCode) + ".");
        }
    }

    function ErrorFunc(status) {
        debugger;
        /*
            If you reach here, user is probabaly not running the
            service. Redirect the user to a page where he can download the
            executable and install it.
        */
        alert("Check if SGIBIOSRV is running; Status = " + status + ":");

    }


    function CallSGIFPGetData(successCall, failCall) {
        // 8.16.2017 - At this time, only SSL client will be supported.
        var uri = "https://localhost:8443/SGIFPCapture";
        debugger;
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                fpobject = JSON.parse(xmlhttp.responseText);
                successCall(fpobject);
            }
            else if (xmlhttp.status == 404) {
                failCall(xmlhttp.status)
            }
        }
        var params = "Timeout=" + "10000";
        params += "&Quality=" + "50";
        params += "&licstr=" + encodeURIComponent(secugen_lic);
        params += "&templateFormat=" + "ISO";
        params += "&imageWSQRate=" + "0.75";
        console.log
        xmlhttp.open("POST", uri, true);
        xmlhttp.send(params);

        xmlhttp.onerror = function () {
            failCall(xmlhttp.statusText);
        }
    }


</script>



@*//2*@

<script type="text/javascript">
    var template_1 = "";
    var template_2 = "@ViewBag.UserPrintSuccess";
    debugger;

    function SuccessFunc1(result) {
        if (result.ErrorCode == 0) {
            debugger;
            /* 	Display BMP data in image tag
                BMP data is in base 64 format
            */
            if (result != null && result.BMPBase64.length > 0) {
                debugger;
                document.getElementById('FPImage1').src = "data:image/bmp;base64," + result.BMPBase64;
            }
            template_1 = result.TemplateBase64;
            debugger;
            $("#ScannedButton").click();
            $("#getKey").click();
            $("#LoginButton").show()
        }
        else {

            alert("Fingerprint Capture Error Code:  " + result.ErrorCode + ".\nDescription:  " + ErrorCodeToString(result.ErrorCode) + ".");
            sessionStorage.clear();
            location.href = "/Fingerprint/Signout"
        }
    }

    function SuccessFunc2(result) {
        if (result.ErrorCode == 0) {
            debugger;
            /* 	Display BMP data in image tag
                BMP data is in base 64 format
            */
            if (result != null && result.BMPBase64.length > 0) {
                document.getElementById('FPImage2').src = "data:image/bmp;base64," + result.BMPBase64;
            }
            template_2 = result.TemplateBase64;
        }
        else {


            alert("Fingerprint Capture Error Code:  " + result.ErrorCode + ".\nDescription:  " + ErrorCodeToString(result.ErrorCode) + ".");
            sessionStorage.clear();
            location.href = "/Fingerprint/Signout"
        }
    }

    function ErrorFunc(status) {
        /*
            If you reach here, user is probabaly not running the
            service. Redirect the user to a page where he can download the
            executable and install it.
        */debugger;
        alert("Check if SGIBIOSRV is running; status = " + status + ":");
    }

    function CallSGIFPGetData(successCall, failCall) {
        debugger;
        var uri = "https://localhost:8443/SGIFPCapture";
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            debugger;
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {

                fpobject = JSON.parse(xmlhttp.responseText);
                successCall(fpobject);
            }
            else if (xmlhttp.status == 404) {
                failCall(xmlhttp.status)
            }
        }
        xmlhttp.onerror = function () {

            failCall(xmlhttp.status);
        }

        var secugen_lic = "";
        debugger;
        var params = "Timeout=" + "10000";
        params += "&Quality=" + "50";
        params += "&licstr=" + encodeURIComponent(secugen_lic);
        params += "&templateFormat=" + "ISO";
        xmlhttp.open("POST", uri, true);
        xmlhttp.send(params);
    }

    function matchScore(succFunction) {
        debugger;
        if (template_1 == "" || template_2 == "") {
            alert("Please scan two fingers to verify!!");
            return;
        }
        var uri = "https://localhost:8443/SGIMatchScore";
        debugger;
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {

            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                fpobject = JSON.parse(xmlhttp.responseText);
                succFunction(fpobject);
            }
            else if (xmlhttp.status == 404) {
                failFunction(xmlhttp.status)
            }
        }

        xmlhttp.onerror = function () {
            debugger;
            failFunction(xmlhttp.status);
        }
        var secugen_lic = "";
        debugger;
        var params = "template1=" + encodeURIComponent(template_1);
        params += "&template2=" + encodeURIComponent(template_2);
        params += "&licstr=" + encodeURIComponent(secugen_lic);
        params += "&templateFormat=" + "ISO";
        xmlhttp.open("POST", uri, false);
        xmlhttp.send(params);
    }

    function succMatch(result) {
        debugger;
        var idQuality = document.getElementById("quality").value;
        if (result.ErrorCode == 0) {
            if (result.MatchingScore >= idQuality) {

                //  alert("MATCHED ! (" + result.MatchingScore + ")");
                window.location.href = '/Fingerprint/Login/' + true;
            }
            else {
                sessionStorage.clear();
                location.href = "/Fingerprint/Signout";
                window.location.href = '/Fingerprint/Signout';
                alert("NOT MATCHED ! (" + result.MatchingScore + ")");
                
            }
        }
        else {
            alert("Error Scanning Fingerprint ErrorCode = " + result.ErrorCode);
            sessionStorage.clear();
            location.href = "/Fingerprint/Signout"
        }
    }

    function failureFunc(error) {
        alert("On Match Process, failure has been called");
    }

</script>
